apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    libVersionName = version
    libraryName = 'Strada Android'
    libraryDescription = 'Create fully native Android controls, driven by your web app'

    publishedGroupId = 'dev.hotwire'
    publishedArtifactId = 'strada'

    siteUrl = 'https://github.com/hotwired/strada-android'
    gitUrl = 'https://github.com/hotwired/strada-android.git'

    licenseType = 'MIT License'
    licenseUrl = 'https://github.com/hotwired/strada-android/blob/main/LICENSE'

    developerId = 'basecamp'
    developerEmail = 'androidteam@basecamp.com'

    isSonatypeRelease = project.hasProperty('sonatype')
}

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }
}

repositories {
    google()
    mavenCentral()
}

android {
    compileSdk = 34

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true

        kotlinOptions {
            freeCompilerArgs += [
                '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            ]
        }
    }

    namespace 'dev.hotwire.strada'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'
    implementation 'androidx.lifecycle:lifecycle-common:2.7.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'androidx.lifecycle:lifecycle-runtime-testing:2.7.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
}

// Use the sources jar when publishing
task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

// Only sign Sonatype release artifacts
tasks.withType(Sign) {
    onlyIf { isSonatypeRelease }
}

// Sign Sonatype published release artifacts
if (isSonatypeRelease) {
    signing {
        def keyId = System.getenv('GPG_KEY_ID')
        def secretKey = System.getenv("GPG_SECRET_KEY")
        def password = System.getenv("GPG_PASSWORD")

        useInMemoryPgpKeys(keyId, secretKey, password)

        required { gradle.taskGraph.hasTask("publish") }
        sign publishing.publications
    }
}

// Publish to GitHub Packages via ./gradlew -Pversion=<version> clean build publish
// https://github.com/orgs/hotwired/packages?repo_name=strada-android
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                pom {
                    name = libraryName
                    description = libraryDescription
                    url = siteUrl
                    licenses {
                        license {
                            name = licenseType
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerId
                            email = developerEmail
                        }
                    }
                    scm {
                        url = gitUrl
                    }
                }

                // Applies the component for the release build variant
                from components.release

                // Add sources as separate jar
                artifact androidSourcesJar

                // Publication attributes
                groupId = publishedGroupId
                artifactId = publishedArtifactId
                version = libVersionName
            }
        }
        repositories {
            if (isSonatypeRelease) {
                maven {
                    url = uri('https://s01.oss.sonatype.org/content/repositories/releases/')

                    credentials {
                        username = System.getenv('SONATYPE_USER')
                        password = System.getenv('SONATYPE_PASSWORD')
                    }
                }
            } else {
                maven {
                    name = 'GitHubPackages'
                    url = uri('https://maven.pkg.github.com/hotwired/strada-android')

                    credentials {
                        username = System.getenv('GITHUB_ACTOR')
                        password = System.getenv('GITHUB_TOKEN')
                    }
                }
            }
        }
    }
}
